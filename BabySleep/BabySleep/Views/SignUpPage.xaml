<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:BabySleep.ViewModels"
             xmlns:resources="clr-namespace:BabySleep.Resx"
             xmlns:custom="clr-namespace:BabySleep.CustomControls"
             xmlns:behaviour="clr-namespace:BabySleep.Behaviors"
             xmlns:converter="clr-namespace:BabySleep.Convertors"
             xmlns:effect="clr-namespace:BabySleep.Effects"
             x:Class="BabySleep.Views.SignUpPage"
             Title="{x:Static resources:LoginResources.SignUp}">
    
    <ContentPage.BindingContext>
        <local:SignUpViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converter:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"/>
            <converter:ByteToImageFieldConverter x:Key="ByteToImageFieldConverter"/>
        </ResourceDictionary>
        
        <Style TargetType="Label"
            ApplyToDerivedTypes="True"
            CanCascade="True">
            <Setter Property="FontSize" Value="Medium" />
            <Setter Property="Margin" Value="3,0" />
        </Style>

        <Style TargetType="StackLayout" x:Key="FieldGroup"
            ApplyToDerivedTypes="True"
            CanCascade="True">
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>
    </ContentPage.Resources>

    <StackLayout Margin="10" VerticalOptions="CenterAndExpand" >
        <Label
                HorizontalTextAlignment="Center"
                Style="{x:StaticResource TitleStyle}"
                Text="{x:Static resources:LoginResources.SignUp }" />

        <StackLayout Style="{StaticResource FieldGroup}">
            <custom:ExtendedEntry Placeholder="{x:Static resources:LoginResources.Email}"
                Text="{Binding Email.Value}" MaxLength="254" >
                <Entry.Behaviors>
                    <behaviour:EntryLineValidationBehavior IsValid="{Binding Email.IsValid}"/>
                </Entry.Behaviors>
            </custom:ExtendedEntry>
            <Label Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        IsVisible="{Binding Email.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
        </StackLayout>

        <StackLayout Style="{StaticResource FieldGroup}">
            <custom:ExtendedEntry Placeholder="{x:Static resources:LoginResources.Password}"
                Text="{Binding Password.Value}" MaxLength="15" IsPassword="True" >
                <Entry.Behaviors>
                    <behaviour:EntryLineValidationBehavior IsValid="{Binding Password.IsValid}"/>
                </Entry.Behaviors>
                <Entry.Effects>
                    <effect:ShowHidePasswordEffect />
                </Entry.Effects>
            </custom:ExtendedEntry>
            <Label Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        IsVisible="{Binding Password.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
        </StackLayout>

        <StackLayout Style="{StaticResource FieldGroup}">
            <custom:ExtendedEntry Placeholder="{x:Static resources:LoginResources.PasswordConfirm}"
                Text="{Binding PasswordConfirm.Value}" MaxLength="15" IsPassword="True" >
                <Entry.Behaviors>
                    <behaviour:EntryLineValidationBehavior IsValid="{Binding PasswordConfirm.IsValid}"/>
                </Entry.Behaviors>
                <Entry.Effects>
                    <effect:ShowHidePasswordEffect />
                </Entry.Effects>
            </custom:ExtendedEntry>
            <Label Text="{x:Static resources:LoginResources.InvalidPasswordConfirm}"
                        IsVisible="{Binding PasswordConfirm.IsValid, Converter={StaticResource InverseBoolConverter}}"
                        Style="{StaticResource ErrorTextStyle}"/>
        </StackLayout>

        <StackLayout Style="{StaticResource FieldGroup}">
            <Button Text="{x:Static resources:LoginResources.SignUp}"
                Style="{StaticResource ActiveButtonStyle}"
                Command="{Binding SignUpCommand}"
                TextTransform="Uppercase"/>
        </StackLayout>
    </StackLayout>
</ContentPage>